openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: Recibo
  description: API do recibo
- name: Estacionamento
  description: API de estacionamento
- name: Condutor
  description: API de condutor
- name: Veiculo
  description: API de veiculo
- name: Forma de Pagamento
  description: API da forma de pagamento
paths:
  /{idCondutor}/formaPagamento/{formaPagamento}:
    put:
      tags:
      - Forma de Pagamento
      summary: Endpoint para atualizar a forma de pagamento do condutor
      description: Atualizar a forma de pagamento na base de dados
      operationId: atualizar
      parameters:
      - name: idCondutor
        in: path
        description: Id do condutor
        required: true
        schema:
          type: string
      - name: formaPagamento
        in: path
        description: Forma de pagamento
        required: true
        schema:
          type: string
          enum:
          - CREDTIO
          - DEBITO
          - PIX
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CondutorResponseDTO'
  /veiculos/{placa}:
    get:
      tags:
      - Veiculo
      summary: Endpoint para buscar um veículo
      description: Busca um veículo na base de dados
      operationId: buscar
      parameters:
      - name: placa
        in: path
        description: Placa do veículo
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VeiculoResponseDTO'
    put:
      tags:
      - Veiculo
      summary: Endpoint para atualizar um veículo
      description: Atualiza um veículo base de dados
      operationId: atualizar_1
      parameters:
      - name: placa
        in: path
        description: Placa do veículo
        required: true
        schema:
          type: string
      requestBody:
        description: Dados do veículo para serem cadastrados
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VeiculoRequestDTO'
        required: true
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VeiculoResponseDTO'
    delete:
      tags:
      - Veiculo
      summary: Endpoint para deletar um veículo
      description: Deleta um veículo base de dados
      operationId: deletar
      parameters:
      - name: placa
        in: path
        description: Placa do veículo
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VeiculoResponseDTO'
  /estacionamentos/{placa}:
    get:
      tags:
      - Estacionamento
      summary: Endpoint para buscar todos os estacionamento por placa
      description: Buscar todos os estacionamentos por placa na base de dados
      operationId: buscarTodosEstacionamentoPorPlaca
      parameters:
      - name: placa
        in: path
        description: Placa do carro
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EstacionamentoResponseDTO'
    put:
      tags:
      - Estacionamento
      summary: Endpoint para finalizar um estacionamento
      description: "Finaliza um estacionamento, calculando o valor a ser pago"
      operationId: finalizar
      parameters:
      - name: placa
        in: path
        description: Placa do carro
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EstacionamentoResponseDTO'
    post:
      tags:
      - Estacionamento
      summary: Endpoint para cadastrar um estacionamento
      description: Cadastrar um estacionamento na base de dados
      operationId: create
      parameters:
      - name: placa
        in: path
        description: Placa do carro
        required: true
        schema:
          type: string
      requestBody:
        description: Informações do estacionamento
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EstacionamentoRequestDTO'
        required: true
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EstacionamentoResponseDTO'
  /condutores/{id}:
    get:
      tags:
      - Condutor
      summary: Endpoint para consultar condutor por ID
      description: Consultar condutor cadastrado na base de dados por ID
      operationId: consultarPorId
      parameters:
      - name: id
        in: path
        description: ID do condutor
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CondutorResponseDTO'
    put:
      tags:
      - Condutor
      summary: Endpoint para atualizar condutor
      description: Atualizar condutor cadastrado na base de dados
      operationId: atualizar_2
      parameters:
      - name: id
        in: path
        description: ID do condutor
        required: true
        schema:
          type: string
      requestBody:
        description: Os dados de atualização do condutor
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CondutorRequestDTO'
        required: true
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CondutorResponseDTO'
    delete:
      tags:
      - Condutor
      summary: Endpoint para deletar condutor
      description: Deletar condutor cadastrado na base de dados
      operationId: deletar_1
      parameters:
      - name: id
        in: path
        description: ID do condutor
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
  /veiculos/{idCondutor}:
    post:
      tags:
      - Veiculo
      summary: Endpoint para cadastrar um veículo
      description: Cadastra um veículo vinculado a um condutor na base de dados
      operationId: cadastrar
      parameters:
      - name: idCondutor
        in: path
        description: ID do condutor
        required: true
        schema:
          type: string
      requestBody:
        description: Dados do veículo para serem cadastrados
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VeiculoRequestDTO'
        required: true
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VeiculoResponseDTO'
  /condutores:
    get:
      tags:
      - Condutor
      summary: Endpoint para consultar condutores
      description: Consultar condutores cadastrados na base de dados
      operationId: findAll
      parameters:
      - name: pageable
        in: query
        description: Paginação
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      - name: nome
        in: query
        description: Nome do condutor
        required: false
        schema:
          type: string
      - name: email
        in: query
        description: Email do condutor
        required: false
        schema:
          type: string
      - name: cpf
        in: query
        description: CPF do condutor
        required: false
        schema:
          type: string
      - name: formaPagamento
        in: query
        description: Forma de pagamento favorita
        required: false
        schema:
          type: string
          enum:
          - CREDTIO
          - DEBITO
          - PIX
      - name: endereco
        in: query
        description: Endereço do condutor
        required: false
        schema:
          $ref: '#/components/schemas/Endereco'
      - name: veiculos
        in: query
        description: Veículos do condutor
        required: false
        schema:
          type: array
          items:
            $ref: '#/components/schemas/Veiculo'
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageCondutorResponseDTO'
    post:
      tags:
      - Condutor
      summary: Endpoint para cadastrar condutor
      description: Cadastrar condutor na base de dados
      operationId: cadastrar_1
      requestBody:
        description: As informações relevantes para o cadastro do condutor
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CondutorRequestDTO'
        required: true
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CondutorResponseDTO'
  /veiculos/condutor/{idCondutor}:
    get:
      tags:
      - Veiculo
      summary: Endpoint para buscar todos os veículos do condutor
      description: Busca todos os veículos do condutor na base de dados
      operationId: buscarTodosPorCodutor
      parameters:
      - name: idCondutor
        in: path
        description: ID do condutor
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VeiculoResponseDTO'
  /recibos/{placa}:
    get:
      tags:
      - Recibo
      summary: Endpoint para emitir o recibo
      description: Emiti o recibo com todas as informações relacionadas ao estacionamento
      operationId: emitir
      parameters:
      - name: placa
        in: path
        description: Placa do veiculo
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            text/plain:
              schema:
                type: string
  /estacionamentos:
    get:
      tags:
      - Estacionamento
      summary: Endpoint para buscar todos os estacionamento ativos
      description: Buscar todos os estacionamentos ativos na base de dados
      operationId: buscarEstacionamentosAtivos
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EstacionamentoResponseDTO'
  /estacionamentos/{placa}/finalizado:
    get:
      tags:
      - Estacionamento
      summary: Endpoint para buscar estacionamento finalizado por placa
      description: Buscar o estacionamentos finalizado por placa na base de dados
      operationId: buscarEstacionamentoFinalizadoPorPlaca
      parameters:
      - name: placa
        in: path
        description: Placa do carro
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EstacionamentoResponseDTO'
  /estacionamentos/{placa}/ativo:
    get:
      tags:
      - Estacionamento
      summary: Endpoint para buscar estacionamento ativo por placa
      description: Buscar estacionamento ativo por placa na base de dados
      operationId: buscarEstacionamentoAtivoPorPlaca
      parameters:
      - name: placa
        in: path
        description: Placa do carro
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EstacionamentoResponseDTO'
components:
  schemas:
    CondutorResponseDTO:
      type: object
      properties:
        id:
          type: string
        nome:
          type: string
        email:
          type: string
        cpf:
          type: string
        formaPagamento:
          type: string
          enum:
          - CREDTIO
          - DEBITO
          - PIX
        endereco:
          $ref: '#/components/schemas/Endereco'
        veiculos:
          type: array
          items:
            $ref: '#/components/schemas/Veiculo'
    Endereco:
      type: object
      properties:
        cep:
          type: string
        logradouro:
          type: string
        complemento:
          type: string
        bairro:
          type: string
        cidade:
          type: string
        uf:
          type: string
        numero:
          type: string
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
    Veiculo:
      type: object
      properties:
        placa:
          type: string
        modelo:
          type: string
        cor:
          type: string
        marca:
          type: string
    VeiculoRequestDTO:
      type: object
      properties:
        placa:
          type: string
        modelo:
          type: string
        cor:
          type: string
        marca:
          type: string
    VeiculoResponseDTO:
      type: object
      properties:
        placa:
          type: string
        modelo:
          type: string
        cor:
          type: string
        marca:
          type: string
    EstacionamentoResponseDTO:
      type: object
      properties:
        id:
          type: string
        tipoEstacionamento:
          type: string
          enum:
          - FIXO
          - VARIAVEL
        duracaoDesejada:
          type: integer
          format: int32
        horaInicial:
          type: string
          format: date-time
        horaFinal:
          type: string
          format: date-time
        veiculo:
          $ref: '#/components/schemas/Veiculo'
        nome:
          type: string
        email:
          type: string
        dataHoraUltimoAlerta:
          type: string
          format: date-time
        valorCobrado:
          type: number
          format: double
    CondutorRequestDTO:
      type: object
      properties:
        nome:
          type: string
        email:
          type: string
        cpf:
          type: string
        senha:
          type: string
        endereco:
          $ref: '#/components/schemas/Endereco'
    EstacionamentoRequestDTO:
      type: object
      properties:
        tipoEstacionamento:
          type: string
          enum:
          - FIXO
          - VARIAVEL
        duracaoDesejada:
          type: integer
          format: int32
    Pageable:
      type: object
      properties:
        page:
          minimum: 0
          type: integer
          format: int32
        size:
          minimum: 1
          type: integer
          format: int32
        sort:
          type: array
          items:
            type: string
    PageCondutorResponseDTO:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/CondutorResponseDTO'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/SortObject'
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        paged:
          type: boolean
        unpaged:
          type: boolean
    SortObject:
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
